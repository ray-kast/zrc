#!/usr/bin/env perl6

grammar Input-Grammar {
  token TOP {^ <item>* $}

  proto token item {*}
  token item:type<al> {:i ｢ial｣ }
  token item:type<bb> {:i ｢baby｣ | ｢babe｣ }
  token item:type<cc> {:i ｢ck｣ | ｢ct｣ <|w> | (<[nr]>) ｢k｣ }
  token item:type<ccs> {:i ｢cks｣ | ｢cts｣ <|w> | (<[nr]>) ｢ks｣ }
  # token item:type<e>  {:i (<[ctv]>) ｢e｣ (｢s｣)? <|w> }
  # token item:type<ing> {:i ｢ing｣ <|w> }
  token item:type<oi> {:i ｢oy｣ }
  token item:type<pp> {:i ｢pt｣ (<-[aeiouy]> | $) | ｢p｣ (｢s｣)? <|w> }
  token item:type<gery> {:i ｢gry｣ }
  token item:type<ys> {:i ｢ies｣ }

  token item:type<def> { . }
}

class Input-Parse {
  has $!str = ｢｣;
  method TOP ($/) { make $<item>.map({ .made }).join(''); }
  method item:type<al> ($/) { make 'al'; }
  method item:type<bb> ($/) { make 'bb'; }
  method item:type<cc> ($/) { make ($0 // '') ~ 'cc'; }
  method item:type<ccs> ($/) { make ($0 // '') ~ 'ccs'; }
  # method item:type<e> ($/) { make ($0 // '') ~ ($1 // ''); }
  # method item:type<ing> ($/) { make ''; }
  method item:type<oi> ($/) { make 'oi'; }
  method item:type<pp> ($/) { make 'pp' ~ ($0 // $1 // ''); }
  method item:type<gery> ($/) { make 'gery'; }
  method item:type<ys> ($/) { make 'ys'; }

  method item:type<def> ($/) { make $/; }
}

say Input-Grammar.parse($*IN.lines().join("\n"), :actions(Input-Parse.new)).made;
